# Generated by Django 4.0.4 on 2023-05-04 14:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('my_company', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creat la')),
                ('last_change', models.DateTimeField(auto_now=True, verbose_name='Ultima modificare')),
                ('is_active', models.BooleanField(default=True, help_text='Modelul de tiparire este disponibil pentru tiparire')),
                ('denumire', models.CharField(help_text='Nume client', max_length=250)),
                ('judet', models.CharField(blank=True, help_text='judet', max_length=250)),
                ('oras', models.CharField(blank=True, help_text='oras', max_length=250)),
                ('strada', models.CharField(blank=True, help_text='strada', max_length=250)),
                ('nr', models.CharField(blank=True, help_text='nr', max_length=10)),
                ('bloc', models.CharField(blank=True, help_text='bloc', max_length=10)),
                ('ap', models.CharField(blank=True, help_text='apartament', max_length=10)),
                ('etaj', models.CharField(blank=True, help_text='etaj', max_length=10)),
                ('telefon', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Contact phone number', max_length=128, region=None, verbose_name='Numar de telefon')),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Fax', max_length=128, region=None, verbose_name='Fax')),
                ('codPostal', models.CharField(blank=True, help_text='cod postal', max_length=10)),
                ('customer_type', models.CharField(choices=[('F', 'Persona Fizica'), ('B', 'Persoana Juridica')], help_text='Tip client', max_length=1)),
                ('cui', models.CharField(blank=True, help_text='Cod Unic de Inregistrare, codul fiscal', max_length=12, null=True, unique=True)),
                ('nrRegCom', models.CharField(blank=True, help_text='Numar inregistrare registrul comertului', max_length=40, null=True, unique=True)),
                ('scopTVA', models.BooleanField(default=False, help_text='true -pentru platitor in scopuri de tva / false in cazul in care nu e platitor  in scopuri de TVA la data cautata')),
                ('cotaTVA', models.DecimalField(blank=True, decimal_places=0, help_text='Cota TVA', max_digits=2, null=True)),
                ('iban', models.CharField(blank=True, help_text='Contul Iban', max_length=16)),
                ('banca', models.CharField(blank=True, help_text='Banca', max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_to_company', to='my_company.mycompany')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creat de')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clien»õi',
            },
        ),
    ]
