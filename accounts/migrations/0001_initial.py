# Generated by Django 4.0.4 on 2023-05-04 13:46

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import phonenumber_field.modelfields
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(error_messages={'unique': 'This email address it is in use.'}, max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(help_text='User first name', max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(help_text='User last name', max_length=255, verbose_name='last name')),
                ('crate_date', models.DateTimeField(auto_now_add=True, help_text='date joined', verbose_name='date joined')),
                ('last_change', models.DateTimeField(auto_now=True, help_text='last detais change / Has to be implemented', verbose_name='last detais change / Has to be implemented')),
                ('is_admin', models.BooleanField(default=False, help_text='is the user an admin with superuser rights')),
                ('is_staff', models.BooleanField(default=False, help_text='is the user allowed to have access to the admin')),
                ('is_active', models.BooleanField(default=False, help_text='is the user account currently active')),
                ('is_accsept', models.BooleanField(default=False, help_text='accepted terms and conditions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default='', max_length=200)),
                ('city', models.CharField(default='', max_length=50)),
                ('avatar', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='user-avatars')),
                ('user_role', models.SmallIntegerField(choices=[(1, 'customer'), (2, 'editor'), (3, 'technician'), (4, 'supervisor'), (5, 'admin')], default='1')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Numarul pe care puteti fi contactat in cazul pierderi bunului.', max_length=128, region=None, verbose_name='Numar de telefon.')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('type', models.CharField(choices=[('ACCOUNT_CREATED', 'account_created'), ('PASSWORD_RESET_LINK_SENT', 'password_reset_link_sent'), ('PASSWORD_RESET', 'password_reset'), ('EMAIL_CHANGED_REQUEST', 'email_changed_request'), ('PASSWORD_CHANGED', 'password_changed'), ('EMAIL_CHANGED', 'email_changed'), ('ACCOUNT_DELETE_REQUEST', 'account_delete_request'), ('USER_TAG_ASSIGNED', 'user_tag_assigned'), ('USER_TAG_LOST', 'user_tag_lost'), ('USER_TAG_FOUND', 'user_tag_found'), ('USER_TAG_RECOVERED', 'user_tag_recovered'), ('CUSTOMER_DELETED', 'customer_deleted'), ('EMAIL_ASSIGNED', 'email_assigned'), ('NAME_ASSIGNED', 'name_assigned'), ('NOTE_ADDED', 'note_added')], max_length=255)),
                ('parameters', jsonfield.fields.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('date',),
            },
        ),
    ]
